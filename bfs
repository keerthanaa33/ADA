#include <stdbool.h>
#include <stdlib.h>

bool bfs(int** graph, int* graphColSize, int* color, int start) {
    int queue[1000]; 
    int front = 0, rear = 0;
    
    queue[rear++] = start;
    color[start] = 0; 

    while (front < rear) {
        int node = queue[front++];
        
        for (int i = 0; i < graphColSize[node]; i++) {
            int neighbor = graph[node][i];
            
            if (color[neighbor] == -1) {=
                color[neighbor] = 1 - color[node];
                queue[rear++] = neighbor;
            } else if (color[neighbor] == color[node]) { 
                return false;
            }
        }
    }
    return true;
}

bool isBipartite(int** graph, int graphSize, int* graphColSize) {
    int color[1000];
    for (int i = 0; i < graphSize; i++) color[i] = -1; 

    for (int i = 0; i < graphSize; i++) {
        if (color[i] == -1) { 
            if (!bfs(graph, graphColSize, color, i)) {
                return false;
            }
        }
    }
    return true;
}
